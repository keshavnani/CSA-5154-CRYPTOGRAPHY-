#include <stdio.h>
#include <math.h>
long long mod_exp(long long base, long long exp, long long mod) {
    long long result = 1;
    base = base % mod;
    while (exp > 0) {
        if (exp % 2 == 1) 
            result = (result * base) % mod;
        exp = exp >> 1; 
        base = (base * base) % mod; 
    }
    return result;
}
int main() {
	printf("keshav reddy (192210248)\n");
    long long p = 23; 
    long long g = 5;  
    long long a = 6; 
    long long b = 15; 
    long long A = mod_exp(g, a, p); 
    long long B = mod_exp(g, b, p); 
    long long secretA = mod_exp(B, a, p); 
    long long secretB = mod_exp(A, b, p); 
    printf("Public parameters: p = %lld, g = %lld\n", p, g);
    printf("Alice's private key: %lld\n", a);
    printf("Bob's private key: %lld\n", b);
    printf("Alice's public key: %lld\n", A);
    printf("Bob's public key: %lld\n", B);
    printf("Shared secret (computed by Alice): %lld\n", secretA);
    printf("Shared secret (computed by Bob): %lld\n", secretB);

    return 0;
}
